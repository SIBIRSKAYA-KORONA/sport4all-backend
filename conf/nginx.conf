worker_processes auto;

events {
    worker_connections 1536;
}

http {

    include mime.types;

    server {
        ssl_certificate /etc/letsencrypt/live/sport4all.tech-0001/fullchain.pem;

        ssl_certificate_key /etc/letsencrypt/live/sport4all.tech-0001/privkey.pem;

        ssl_session_cache shared:SSL:100m;
        ssl_session_timeout 60m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        ssl_ciphers 'EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DES';
        ssl_prefer_server_ciphers on;

        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 [2001:4860:4860::8888];


        listen 443 deferred http2 ssl;
        listen [::]:443 deferred http2 ssl ipv6only=on;
        server_name sport4all.tech;
        charset utf-8;

        server_tokens off;

        client_max_body_size 32m;

        location / {
                root /etc/sport4all-frontend/dist;
                index index.html;
                try_files $uri /index.html;
        }

        location /api/ {
                # api - имя контейнера в докеровской сети
                proxy_pass http://api:8080;
                expires -1;
        }

        location /api/ws {
                proxy_pass http://notifier:6060;
                proxy_http_version 1.1;
                proxy_set_header Upgrade 'websocket';
                proxy_set_header Connection 'upgrade';
                proxy_read_timeout 180;
                proxy_connect_timeout 180;
        }

        #location /grafana/ {
         #       proxy_pass http://grafana:3000/;
        #}

        location /docs/ {
                auth_basic           “Documentation”;
                auth_basic_user_file /etc/apache2/.htpasswd;
                proxy_pass http://documentation:5757/;
        }

    }

    server {
            client_max_body_size 32m;

            # catch all unsecure requests (both IPv4 and IPv6)
            listen 80 default_server;
            listen [::]:80 default_server ipv6only=on;

            # this means example.com, *.example.com
            server_name .sport4all.tech;

            # permanently redirect client to https version of the site
            return 301 https://$host$request_uri;
    }

    sendfile on;
}
