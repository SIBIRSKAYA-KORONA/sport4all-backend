version: "3.9"

services:
  api:
    image: sport-api
    container_name: sport-api
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    ports:
      - "8080:8080"

  notifier:
    image: sport-notifier
    container_name: sport-notifier
    ports:
      - "6060:6060"

  ocr:
    image: sport-ocr
    container_name: sport-ocr
    ports:
      - "8090:8090"

  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_DB: sport4all_db
      POSTGRES_USER: sport4all_user
      POSTGRES_PASSWORD: sport4all
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    volumes:
      - ~/postgres-data:/data/postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "--dbname", "sport4all_db", "--host", "postgres", "--port", "5432", "--username", "sport4all_user" ]
      timeout: 2s
      retries: 2
      start_period: "3s"

  redis:
    image: redis:alpine
    #command: redis-server --requirepass sOmE_sEcUrE_pAsS
    command: redis-server
    ports:
      - "6379:6379"
    volumes:
      - ~/redis-data:/var/lib/redis
      #  - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    #environment:
     # - REDIS_REPLICATION_MODE=master

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    #user: "$UID:$GID"
    volumes:
      #- ~/rabbitmq-data/etc/:/etc/rabbitmq/
      - ~/rabbitmq-data/data/:/var/lib/rabbitmq/
      #- ~/rabbitmq-data/logs/:/var/log/rabbitmq/
    environment:
      RABBITMQ_DEFAULT_USER: sport4all_user
      RABBITMQ_DEFAULT_PASS: sport4all
    ports:
      - "5672:5672"
      - "15672:15672"

  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - /home/ubuntu/sport4all-frontend/dist:/etc/sport4all-frontend/dist
      - ../conf/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt/live/sport4all.tech/fullchain.pem:/etc/letsencrypt/live/sport4all.tech/fullchain.pem
      - /etc/letsencrypt/live/sport4all.tech/privkey.pem:/etc/letsencrypt/live/sport4all.tech/privkey.pem
      - /etc/apache2/.htpasswd:/etc/apache2/.htpasswd
    ports:
      - "80:80"
      - "443:443"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - $PWD/conf/prometheus.yml:/etc/prometheus/prometheus.yml:Z
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=20d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - '9090:9090'

  node_exporter:
    image: prom/node-exporter
    container_name: node-exporter
    ports:
      - '9100:9100'

  grafana:
    image: grafana/grafana
    container_name: grafana
    user: "$UID:$GID"
    volumes:
      - ~/grafana-storage:/var/lib/grafana
      - $PWD/conf/custom.ini:/etc/grafana/grafana.ini
    ports:
      - '3000:3000'

  documentation:
    image: swaggerapi/swagger-ui
    container_name: swagger-ui
    ports:
      - "5757:8080"
    volumes:
      - $PWD/docs/swagger.yaml:/swagger.yaml
    environment:
      SWAGGER_JSON: /swagger.yaml
